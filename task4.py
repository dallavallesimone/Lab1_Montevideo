# -*- coding: utf-8 -*-
"""Untitled

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jj3bfJ1Tii8Mz5EXCWNcoXO-STp-Tsn0
"""

import numpy as np
import sys

#zeors_array = np.zeros( (32, 32) )

A = []
with open("matrix.csv", 'r') as f:
  lines = f.read().split('\n')
# Get x and y values from each line and append to self.data
for line in lines:
  value = int(line)
  A.append(value)
A_mat = np.mat(A)
A_mat = A_mat.reshape(32,32)

B = []
with open("matrix_b.csv", 'r') as f:
  lines = f.read().split('\n')
# Get x and y values from each line and append to self.data
for line in lines:
  value = int(line)
  B.append(value)
#B_mat = np.mat(B)
B_mat = np.mat(B)
B_mat = B_mat.reshape(32,32)

det_A = np.linalg.det(A_mat)
ainv = np.linalg.inv(A_mat) 
ai = np.rint(ainv * det_A) % 2

with open("KPApairsMontevideo_linear.hex", 'r') as f:
  lines = f.read().split('\n')
# Get x and y values from each line and append to self.data
spec = '{fill}{align}{width}{type}'.format(fill='0', align='>', width=32, type='b')
for line in lines:
  sample = line.split('\t')
  plaintext = str(format(int(sample[0], 16),spec))
  ciphertext = str(format(int(sample[1], 16),spec))

  plaintext = [plaintext[i:i+1] for i in range(0, len(plaintext), 1)];
  plaintext = [int(item) for item in plaintext]
  plaintext = np.array(plaintext)
  
  ciphertext = [ciphertext[i:i+1] for i in range(0, len(ciphertext), 1)];
  ciphertext = [int(item) for item in ciphertext]
  ciphertext = np.array(ciphertext)

  k = np.dot(ciphertext^np.dot(plaintext,B_mat), ai) % 2
  print("k:\n", k)